JIN Films 
Jonathan Hoang, Izak Vucharatavintara, & Nathan Syhanath
Group #13



System Descriptions:

JIN Films' Software Architecture

	The SWA diagram for JIN Films TMS depicts how all parts of the ticket management system interact from the user interface down to the underlying data sources and external systems. At the top of the architecture is the entry layer, which includes the Login Page, Sign Up Page, and Continue as Guest option. These components handle user authentication and
identity creation. When a user signs up, their details, such as name, email, password, and purchase history, are stored in the User Accounts Database, which also tracks rewards and discounts. Guests bypass account creation but still proceed to ticket booking through a temporary session. The user may also be allowed access to the worker portal if they log in as 
an employee. It provides administrative access to employees under the WebsiteInfo, Movie Management, and Summary Report sections. Through this portal, workers can retrieve or update movie data, adjust showtimes, and generate reports summarizing system performance and ticket transactions. At the center of the system, the main customer journey begins with the 
Movie Selection Page, where users select the film they want to see. This page communicates with the Movie Database, which stores available movie times and locations. After choosing a movie, the user proceeds to the Time and Theater Page, where they can view and select showtimes and theaters. The process then continues to the Seat Page, featuring an interactive 
seating map that queries the Theater Database for layout, available seats, and accessibility (ADA) options. Once seats are chosen, the flow moves to the Pay Page, where users or guests input cardholder details, redeem rewards or discounts, and finalize payments. This step interacts with an external Bank/Payment Gateway, ensuring secure transaction handling and 
updates to purchase either via email or downloadable formats, and updates the summary report to the worker portal. Overall, the SWA diagram captures a layered architecture where the presentation layer (user and admin interfaces) interacts with the application layer (booking and payment processing) and finally with the data and external services layer (databases 
and payment systems). Together, these components ensure seamless user experiences, reliable transactions, and maintainable back-end operations for JIN Films TMS.  


JIN Films' UMl Diagram

	The UML diagram for JIN Films TMS represents the online ticketing system's processes and responsibilities. The central class is Movie includes the variables such as movieName, date, time, movieFormat, and seats which main goal is to store essential information such as the movie name, date, format and seating avaliablity. The operations for this class includes getName() which recieves movie title, getAvailableSeats() to get avaliable open seats and isSeatTake(index) which checks the seat is taken. The ticket class represents what the tickets information is stored such as the seat location and time. It includes seat((int,int)), price(int) and buyingTicket() to process buying a movie ticket. MakePayment class handles purchases by confirming transactions, updating seats and sending confirmation emails it work. It's attributions consists of confirmationID(int) and myTickets(ticket) with methods confirmPurchase(ticket) to produce confirmation IDs, updateSeats(ticket) to change avaliablity, and sendConfirmationEmail to notify users of their purchase of their ticket. MovieList class stores the list of movies allowing the class to send updates to available options. The class maintains a movies(Movie[]) array and provides updateMovie(Movie) operation to manage the list of movies. The accountInfo class works together with UserInfo as the accountInfo class includes the customer's credentials, contact details, and membership status. The class includes the user's username, password, name, email, and membership to store the user's neccessary info to buy a movie ticket. It works together with UserInfo as it provides functions for users to view and pick movies, cancel tickets or manage their membership. The Websiteinfo class integrate functions such as addMovie(Movie, int), deleteMovie(movie), and addMembership(Membership) to provide functions to operate sufficiently on it's role to provide info to the user. The last class UserInfo includes discountStatus(bool) and operations such as viewMovies(), pickMovie(Movie), cancelMovie(Ticket) and cancelMembership(Membership) which allows the user to interact with these operations as these functions provide the necessary tools to provide a user friendly experience on a movie theater platform. The UML diagram shows a clear structure that consists of organized data storage, friendly user interaction and transaction processing in a ticketing platform.



	
Development plan and timeline: 
